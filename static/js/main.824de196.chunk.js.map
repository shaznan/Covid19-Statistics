{"version":3,"sources":["Components/cards/cards.module.css","Components/cards/cards.jsx","api/index.js","Components/chart/chart.jsx","Components/countrypicker/countrypicker.jsx","images/cov19_image.png","App.js","reportWebVitals.js","index.js","Components/countrypicker/countrypicker.module.css","App.module.css","Components/chart/chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","value","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchedAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coverImage","alt","Container","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824de196.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__11JBS\",\"card\":\"cards_card__RI5d0\",\"infected\":\"cards_infected__1W68i\",\"recovered\":\"cards_recovered__1xG7R\",\"deaths\":\"cards_deaths__1JTJL\"};","import React, { useEffect } from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\r\n  if (!confirmed) {\r\n    return <div>Loading</div>;\r\n  }\r\n  //   useEffect(() => {\r\n  //     console.log(props);\r\n  //   }, []);\r\n\r\n  console.log(confirmed.value);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.Card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.Card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Recovered cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.Card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={1}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of death cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    console.log(confirmed);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    // console.log(data);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"people\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl, StylesProvider } from \"@material-ui/core\";\r\nimport styles from \"./countrypicker.module.css\";\r\nimport { fetchCountries } from \"../../api/index\";\r\nimport cx from \"classnames\";\r\n\r\nfunction CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchedAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchedAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  // console.log(fetchedCountries);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={cx(styles.formControl, styles.container)}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => {\r\n            handleCountryChange(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/cov19_image.9e5d4fc7.png\";","import styles from \"./App.module.css\";\nimport { Chart, Cards, CountryPicker } from \"./Components\";\nimport { fetchData } from \"./api\";\nimport coverImage from \"./images/cov19_image.png\";\n\n// dependancies:\n//  npm install --save @material-ui/core\n// npm install --save axios react-chartjs-2 react-countup classnames\n//npm install --save chart.js\n\nimport React, { Component } from \"react\";\nimport { Container } from \"@material-ui/core\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    console.log(data);\n\n    return (\n      <div>\n        <img className={styles.image} src={coverImage} alt=\"cov-19 cover\" />\n        <Cards data={data} className={Container} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"countrypicker_test__2QbT2\",\"formControl\":\"countrypicker_formControl__X9Xhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1q-fv\",\"image\":\"App_image__2dHZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__2J4_Z\"};"],"sourceRoot":""}